{"version":3,"sources":["hoc/Auxilliary.js","components/QuizCategory/QuizCategory.js","components/Results/Results.js","utils/Utils.js","container/CountryQuiz/CountryQuiz.js","App.js","reportWebVitals.js","index.js"],"names":["aux","props","children","QuizCategory","letters","useState","index","setIndex","answerSelected","setAnswerSelected","correct","setCorrect","choiceStatus","setChoiceStatus","listStyle","renderIcon","className","border","backgroundColor","color","renderChoices","data","choices","map","ans","idx","id","style","onClick","answer","setScore","setCategory","setRegion","handleClickedAnswer","renderTracker","marginBottom","url","src","alt","question","increment","results","score","restart","options","generateRandom","arr","Math","floor","random","length","shuffleArray","i","j","formatStr","str","indexOf","substring","getQuestion","category","region","a","axios","get","response","json","console","log","questions","filter","item","name","answers","push","capital","flag","CountryQuiz","handleIncrementIndex","state","setState","fetchData","prevState","handleRestartClicked","this","renderQuestions","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2bbbb7f.chunk.js","sourcesContent":["const aux = props => props.children;\r\n\r\nexport default aux;","import React, { useState } from 'react';\r\n\r\nimport './QuizCategory.css';\r\nimport Aux from '../../hoc/Auxilliary';\r\n\r\nconst QuizCategory = (props) => {\r\n    const letters = ['A', 'B', 'C', 'D', 'E'];\r\n    const [index, setIndex] = useState('');\r\n    const [answerSelected, setAnswerSelected] = useState(false);\r\n    const [correct, setCorrect] = useState(false);\r\n    const [choiceStatus, setChoiceStatus] = useState('');\r\n\r\n    let listStyle = {};\r\n    let renderIcon = null;\r\n\r\n\r\n    const handleClickedAnswer = (answer, idx) => {\r\n        // Checks if the data passed is for the quiz\r\n        // then checks if answer selected is correct/wrong\r\n        if(props.data.correct) {\r\n            if(!answerSelected) {\r\n                setIndex(idx);\r\n                setAnswerSelected(true);\r\n                if(answer === props.data.correct) {\r\n                    setChoiceStatus('correct');\r\n                    setCorrect(true);\r\n                    props.setScore();\r\n                } else {\r\n                    setChoiceStatus('wrong');\r\n                }\r\n            }\r\n        // else user selects the quiz type & region\r\n        } else {\r\n            setIndex(idx);\r\n            setAnswerSelected(true);\r\n            setCorrect(true);\r\n            setChoiceStatus('correct');\r\n            if(props.index === 0) {\r\n                props.setCategory(answer);\r\n            } else if(props.index === 1) {\r\n                props.setRegion(answer);\r\n            }\r\n        }\r\n    }\r\n\r\n    if(answerSelected) {\r\n        if(correct) {\r\n            renderIcon = <span className=\"material-icons\">check_circle_outline</span>;\r\n        } else {\r\n            renderIcon = <span className=\"material-icons\">cancel</span>;\r\n            listStyle = { \r\n                border: \"2px solid #60BF88\",\r\n                backgroundColor: \"#60BF88\",\r\n                color: \"#fff\"\r\n            }\r\n        }\r\n    } \r\n\r\n    const handleNextButton = () => {\r\n        props.increment();\r\n        setAnswerSelected(false);\r\n        setCorrect(false);\r\n        setChoiceStatus('');\r\n    }\r\n\r\n    const renderChoices = props.data.choices.map((ans, idx) => {\r\n        return  <li className=\"list\"\r\n                    id={idx === index ? choiceStatus : null} \r\n                    key={idx} \r\n                    style={ choiceStatus === 'wrong' && ans === props.data.correct ? listStyle : null}\r\n                    onClick={() => handleClickedAnswer(ans, idx)}>\r\n                <div className=\"choices\">\r\n                    <span className=\"letters\">{letters[idx]}</span>\r\n                    <span className=\"answers\">{ans}</span>\r\n                </div>\r\n                { idx === index ? renderIcon : null}\r\n                { choiceStatus === 'wrong' && ans === props.data.correct \r\n                    ? <span className=\"material-icons\">check_circle_outline</span>\r\n                    : null \r\n                }\r\n               </li>\r\n        });\r\n    \r\n    const renderTracker = (\r\n        props.data.correct\r\n        ? <div className=\"question-tracker\">{props.index + 1}/10</div>\r\n        : null\r\n    );\r\n\r\n    return (\r\n        <div className=\"QuizCard\" style={!props.answerSelected ? {marginBottom: \"12px\"} : {marginBottom: \"24px\"}}>\r\n            { props.data.url\r\n                ? <img src={props.data.url} alt=\"flag\" className=\"img-flag\"></img>\r\n                : null\r\n            }\r\n            <h3>{props.data.question}</h3>\r\n            <ul className=\"answer-card\">\r\n                {renderChoices}\r\n            </ul>\r\n            { answerSelected \r\n                ? <Aux>\r\n                    { renderTracker }\r\n                    <button className=\"btn btn-next\" onClick={handleNextButton}>Next</button>\r\n                  </Aux>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuizCategory;","import React from 'react';\r\n\r\nimport './Results.css';\r\n\r\nconst results = (props) => {\r\n    return (\r\n        <div className=\"results_box\">\r\n            <img src=\"https://raw.githubusercontent.com/kgalejandrino/DevChallenges/e46b79f3f105b5f68f63fe535b13baa0e46dcaec/Front-End%20Developer/country-quiz/src/assets/undraw_winners_ao2o%202.svg\" alt=\"winner-trophy\" className=\"img-results\"></img>\r\n            <h1>Results</h1>\r\n            <p>You got <span className=\"score\">{props.score}</span> correct answers</p>\r\n            <button className=\"btn btn-try\" onClick={props.restart}>Try Again</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default results;","import axios from 'axios';\r\n\r\nexport const options = [\r\n    { 'question': 'Select Category', 'choices': ['Capital', 'Flag'] },\r\n    { 'question': 'Select Region', 'choices': ['Africa', 'Americas', 'Asia', 'Europe', 'Oceania']}\r\n];\r\n\r\n/* Function: Generate random numbers */\r\nconst generateRandom = (arr) => {\r\n    const random = Math.floor(Math.random() * arr.length);\r\n    return arr[random];\r\n}\r\n\r\n\r\n/* Function: shuffles elements in the array */\r\n/* Credits to @Durstenfeld shuffle */\r\nconst shuffleArray = (arr) => {\r\n    for(let i = arr.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    return arr;\r\n}\r\n\r\n\r\n/* Function: Format country name (e.g Macedonia (the former Yugoslav Republic of) to Macedonia) */\r\nconst formatStr = (str) => {\r\n    if(str.indexOf('(') === -1) {\r\n        return str;\r\n    } else {\r\n        return str.substring(0, str.indexOf(\"(\"));\r\n    }\r\n}\r\n\r\n/* Function: Generate 10 random object containing (questions & choices) */\r\nexport const getQuestion = async (category, region) => {\r\n    const response = await axios.get(`https://restcountries.eu/rest/v2/region/${region}?fields=name;capital;flag`);\r\n    let json = response.data;\r\n    console.log(json);\r\n    const questions = [];\r\n\r\n    for(let i = 0; i < 10; i++) {\r\n        if(category === 'Capital') {\r\n            let data = generateRandom(json);\r\n            json = json.filter(item => item.name !== data.name);\r\n            let answers = [];\r\n            answers.push(formatStr(data.name));\r\n\r\n            for(let i = 0; i < 3; i++) {\r\n                const answer = generateRandom(json).name;\r\n                answers.push(formatStr(answer));\r\n            }\r\n\r\n            const random = {\r\n               question: `${data.capital} is a capital of`,\r\n               choices: shuffleArray(answers),\r\n               correct: data.name\r\n            }\r\n            questions.push(random); \r\n        } else if(category === 'Flag') {\r\n            let data = generateRandom(json);\r\n            json = json.filter(item => item.name !== data.name);\r\n            let answers = [];\r\n            answers.push(formatStr(data.name));\r\n\r\n            for(let i = 0; i < 3; i++) {\r\n                const answer = generateRandom(json).name;\r\n                answers.push(formatStr(answer));\r\n            }\r\n\r\n            const random = {\r\n               question: 'Which country does this flag belong to?',\r\n               choices: shuffleArray(answers),\r\n               correct: data.name,\r\n               url: data.flag\r\n            }\r\n            questions.push(random); \r\n        }\r\n    }\r\n    return questions;\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport './CountryQuiz.css';\r\nimport QuizCategory from '../../components/QuizCategory/QuizCategory';\r\nimport Results from '../../components/Results/Results'; \r\nimport { getQuestion, options } from '../../utils/Utils';\r\nimport Aux from '../../hoc/Auxilliary';\r\n\r\nclass CountryQuiz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            index: 0,\r\n            score: 0,\r\n            category: '',\r\n            region: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() { this.setState({ data: options}) }\r\n\r\n    handleIncrementIndex = () => {\r\n        if(this.state.region && this.state.data.length === 2) {\r\n            this.setState({ index: -1 });\r\n\r\n            const fetchData = async () => {\r\n                const { category, region } = this.state;\r\n                const data = await getQuestion(category, region);\r\n                this.setState({ data: data})\r\n            }\r\n\r\n            fetchData();\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            index: prevState.index + 1\r\n        }))\r\n    }\r\n\r\n    setScore = () => this.setState(prevState => ({ score: prevState.score + 1 }));\r\n\r\n    setCategory = (answer) => this.setState({ category: answer}) \r\n    \r\n    setRegion = (answer) => this.setState({ region: answer}) \r\n\r\n    handleRestartClicked = () => {\r\n        this.setState({ \r\n            data: options,\r\n            index: 0,\r\n            score: 0,\r\n            category: '',\r\n            region: ''\r\n        })\r\n    }\r\n\r\n    render() {   \r\n        console.log(this.state.data);\r\n        const renderQuestions =  (\r\n        <Aux>\r\n            <img src=\"https://raw.githubusercontent.com/kgalejandrino/DevChallenges/4350fd304d74e0a2f78f4ac99324d6f4ff29d1c8/Front-End%20Developer/country-quiz/src/assets/undraw_adventure_4hum%201.svg\" alt=\"undraw_adventure\" className=\"img-quiz\"></img>\r\n            { this.state.data.length\r\n                ? <QuizCategory \r\n                    data={this.state.data[this.state.index]}\r\n                    category={this.state.category}\r\n                    region={this.state.region}\r\n                    index={this.state.index}\r\n                    increment={this.handleIncrementIndex}\r\n                    setCategory={this.setCategory}\r\n                    setRegion={this.setRegion}\r\n                    setScore={this.setScore}\r\n                />\r\n                : null\r\n            }\r\n            </Aux>\r\n        );\r\n        return (\r\n            <div className=\"CountryQuiz\">\r\n                <h2>Country Quiz</h2>\r\n                <div className=\"quiz-card\">\r\n                { this.state.index < 10\r\n                    ? renderQuestions\r\n                    : <Results \r\n                        score={this.state.score}\r\n                        restart={this.handleRestartClicked}\r\n                      />\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default CountryQuiz;","import React, { Component } from 'react';\n\nimport './App.css';\nimport CountryQuiz from './container/CountryQuiz/CountryQuiz';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <CountryQuiz />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}