{"version":3,"sources":["components/Tabs/Tabs.js","components/AddTask/AddTask.js","components/TaskList/TaskList.js","components/DeleteButton/DeleteButton.js","container/App.js","reportWebVitals.js","index.js"],"names":["Tabs","props","list","useState","activeTab","setActiveTab","getIndex","idx","active","tab","className","map","i","id","onClick","addTask","type","onChange","input","value","task","placeholder","clicked","TaskList","setTask","getStoredTask","useEffect","filter","completed","saveTask","localStorage","getItem","JSON","parse","setItem","stringify","completedStyle","textDecoration","index","checked","e","changed","htmlFor","style","deleted","deletButton","App","componentDidMount","document","addEventListener","handleAddTaskPress","componentWillUnmount","handleInputChange","event","setState","target","keyCode","prevState","uniqueID","state","handleAddTaskClick","getActiveTab","handleCheckedChange","temp","forEach","data","handleDeleteTaskClicked","splice","handleDeleteAllTask","getLocalStoredTask","length","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iUAoCeA,EAhCF,SAACC,GACV,IAAMC,EAAO,CACT,CAAC,GAAM,EAAG,IAAO,OACjB,CAAC,GAAM,EAAG,IAAO,UACjB,CAAC,GAAM,EAAG,IAAO,cAJD,EAOYC,mBAAS,GAPrB,mBAOfC,EAPe,KAOJC,EAPI,KASdC,EAAW,SAACC,GACdF,EAAaE,GACbN,EAAMO,OAAON,EAAKK,GAAKE,MAG3B,OACI,sBAAKC,UAAU,OAAf,UACI,oBAAIA,UAAU,UAAd,SACKR,EAAKS,KAAI,SAACT,EAAMU,GACb,OAAO,oBACKF,UAAWR,EAAKW,KAAOT,EAAY,SAAW,KAE9CU,QAAS,kBAAMR,EAASM,IAH7B,SAIMV,EAAKO,KAFDP,EAAKW,SAO9B,qBAAKH,UAAU,kBCZZK,G,MAfC,SAACd,GACb,OACI,sBAAKS,UAAU,UAAf,UACI,uBACIA,UAAU,aACVM,KAAK,OACLC,SAAUhB,EAAMiB,MAChBC,MAAOlB,EAAMmB,KACbC,YAAY,gBAEhB,wBAAQX,UAAU,UAAUI,QAASb,EAAMqB,QAA3C,sBCkDGC,G,MA5DE,SAACtB,GAAW,IAAD,EACFE,mBAAS,IADP,mBACnBiB,EADmB,KACbI,EADa,KAEhBC,EAAkBxB,EAAlBwB,cAERC,qBAAU,WACNF,EAAQvB,EAAMmB,MACd,IAAIO,EAAS1B,EAAMmB,KACF,WAAdnB,EAAMQ,KACLkB,EAASA,EAAOA,QAAO,SAAAP,GAAI,OAAKA,EAAKQ,aACrCJ,EAAQG,IACY,cAAd1B,EAAMQ,MACZkB,EAASA,EAAOA,QAAO,SAAAP,GAAI,OAAIA,EAAKQ,aACpCJ,EAAQG,MAEb,CAAC1B,EAAMQ,IAAKR,EAAMmB,OAErBM,qBAAU,WACN,IAAMG,EAAWC,aAAaC,QAAQ,QACnCF,GACCJ,EAAcO,KAAKC,MAAMJ,MAE9B,CAACJ,IAEJC,qBAAU,WACNI,aAAaI,QAAQ,OAAQF,KAAKG,UAAUlC,EAAMmB,UAGtD,IAAMgB,EAAiB,CAAEC,eAAgB,gBAEzC,OACIjB,EAAKT,KAAI,SAACT,EAAMoC,GACZ,OAAO,sBAAK5B,UAAU,WAAf,UACH,gCACI,uBACIM,KAAK,WACLH,GAAG,OACHH,UAAU,gBACV6B,QAASrC,EAAK0B,UACdX,SAAU,SAACuB,GAAD,OAAOvC,EAAMwC,QAAQD,EAAGtC,EAAKW,OAE3C,uBACI6B,QAAQ,OACRhC,UAAU,iBACViC,MAAOzC,EAAK0B,UAAYQ,EAAiB,KAH7C,SAGoDlC,EAAKkB,UAG7D,8BACmB,cAAdnB,EAAMQ,IACD,sBACEC,UAAU,mCACVI,QAASb,EAAM2C,QAFjB,4BAIA,SArBwBN,QCpBnCO,G,MAbK,SAAC5C,GAEjB,MACkB,cAAdA,EAAMQ,IACA,qBAAKC,UAAU,eAAf,SACE,yBAAQA,UAAU,aAAaI,QAASb,EAAM2C,QAA9C,UACI,sBAAMlC,UAAU,uBAAhB,4BADJ,kBAIF,OC6GCoC,E,kDA/Gb,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IAUR8C,kBAAoB,kBAAMC,SAASC,iBAAiB,UAAW,EAAKC,qBAXjD,EAanBC,qBAAuB,kBAAMH,SAASC,iBAAiB,UAAW,EAAKC,qBAbpD,EAenBE,kBAAoB,SAACC,GAAD,OAAW,EAAKC,SAAS,CAAEpC,MAAOmC,EAAME,OAAOpC,SAfhD,EAiBnB+B,mBAAqB,SAAAG,GACE,KAAlBA,EAAMG,UACP,EAAKF,UAAS,SAAAG,GAAS,MAAK,CAAEC,SAAUD,EAAUC,SAAW,MAC1D,EAAKC,MAAMzC,OACZ,EAAKoC,UAAS,SAAAG,GAAS,MAAK,CAC1BrC,KAAK,GAAD,mBAAMqC,EAAUrC,MAAhB,CAAsB,CAAEP,GAAI,EAAK8C,MAAMD,SAAUtC,KAAM,EAAKuC,MAAMzC,MAAOU,WAAW,SAG5F,EAAK0B,SAAS,CAAEpC,MAAO,OAzBR,EA6BnB0C,mBAAqB,WACnB,EAAKN,UAAS,SAAAG,GAAS,MAAK,CAAEC,SAAUD,EAAUC,SAAW,MAE1D,EAAKC,MAAMzC,OACZ,EAAKoC,UAAS,SAAAG,GAAS,MAAK,CACxBrC,KAAK,GAAD,mBAAMqC,EAAUrC,MAAhB,CAAsB,CAAEP,GAAI,EAAK8C,MAAMD,SAAUtC,KAAM,EAAKuC,MAAMzC,MAAOU,WAAW,SAI9F,EAAK0B,SAAS,CAAEpC,MAAO,MAtCN,EAyCnB2C,aAAe,SAACpD,GAAD,OAAS,EAAK6C,SAAS,CAAElD,UAAWK,KAzChC,EA2CnBqD,oBAAsB,SAACT,EAAOxC,GAC5B,IAAIkD,EAAI,YAAO,EAAKJ,MAAMvC,MAE1B2C,EAAKC,SAAQ,SAACC,GACTA,EAAKpD,KAAOA,IACboD,EAAKrC,UAAYyB,EAAME,OAAOhB,YAIlC,EAAKe,SAAS,CAAElC,KAAM2C,KApDL,EAuDnBG,wBAA0B,SAACrD,GACzB,IAAIkD,EAAI,YAAO,EAAKJ,MAAMvC,MACtBkB,EAAQ,EACZyB,EAAKC,SAAQ,SAACC,EAAMrD,GACfqD,EAAKpD,KAAOA,IACbyB,EAAQ1B,MAGZmD,EAAKI,OAAO7B,EAAO,GACnB,EAAKgB,SAAS,CAAElC,KAAM2C,KAhEL,EAmEnBK,oBAAsB,WACpB,IAAIL,EAAI,YAAO,EAAKJ,MAAMvC,MAE1B2C,EAAOA,EAAKpC,QAAO,SAAAP,GAAI,OAAKA,EAAKQ,aAEjC,EAAK0B,SAAS,CAAElC,KAAM2C,KAxEL,EA2EnBM,mBAAqB,SAACJ,GACpB,IAAIK,EAASL,EAAKK,OAAS,EAC3B,EAAKhB,SAAS,CACZlC,KAAM6C,EACNP,SAAUO,EAAKK,OAASL,EAAKK,GAAQzD,GAAK,KA5E5C,EAAK8C,MAAQ,CACXzC,MAAO,GACPE,KAAM,GACNsC,SAAU,EACVtD,UAAW,OAPI,E,0CAmFnB,WACE,OACE,sBAAKM,UAAU,MAAf,UACI,uCACA,cAAC,EAAD,CACEF,OAAQ+D,KAAKV,eAEf,cAAC,EAAD,CACE3C,MAAOqD,KAAKnB,kBACZ9B,QAASiD,KAAKX,mBACdxC,KAAMmD,KAAKZ,MAAMzC,QAEnB,cAAC,EAAD,CACEE,KAAMmD,KAAKZ,MAAMvC,KACjBqB,QAAS8B,KAAKT,oBACdlB,QAAS2B,KAAKL,wBACdzD,IAAK8D,KAAKZ,MAAMvD,UAChBqB,cAAe8C,KAAKF,qBAEvB,cAAC,EAAD,CACGzB,QAAS2B,KAAKH,oBACd3D,IAAK8D,KAAKZ,MAAMvD,mB,GAzGVoE,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASqC,eAAe,SAM1BZ,M","file":"static/js/main.d7164f66.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './Tabs.css';\r\n\r\nconst Tabs = (props) => {\r\n    const list = [\r\n        {'id': 0, 'tab': 'All' },\r\n        {'id': 1, 'tab': 'Active' },\r\n        {'id': 2, 'tab': 'Completed' }\r\n    ];\r\n\r\n    let [activeTab, setActiveTab] = useState(0);\r\n\r\n    const getIndex = (idx) => { \r\n        setActiveTab(idx);\r\n        props.active(list[idx].tab);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Tabs\">\r\n            <ul className=\"ul-tabs\">\r\n                {list.map((list, i) => {\r\n                    return <li\r\n                                className={list.id === activeTab ? 'active' : null}\r\n                                key={list.id}\r\n                                onClick={() => getIndex(i)} >\r\n                                {list.tab}   \r\n                            </li>\r\n                    })\r\n                }\r\n            </ul>\r\n            <div className=\"underline\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tabs;","import React from 'react';\r\n\r\nimport './AddTask.css';\r\n\r\nconst addTask = (props) => {\r\n    return (\r\n        <div className=\"AddTask\">\r\n            <input \r\n                className=\"task-input\" \r\n                type=\"text\"\r\n                onChange={props.input}\r\n                value={props.task}\r\n                placeholder=\"add details\">\r\n            </input>\r\n            <button className=\"add-btn\" onClick={props.clicked}>Add</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default addTask;","import React, { useEffect, useState } from 'react';\r\n\r\nimport './TaskList.css';\r\n\r\nconst TaskList = (props) => {\r\n    let [task, setTask] = useState([]);\r\n    const { getStoredTask } = props;\r\n    \r\n    useEffect(() => {\r\n        setTask(props.task); \r\n        let filter = props.task;\r\n        if(props.tab === 'Active') {\r\n            filter = filter.filter(task => !task.completed);\r\n            setTask(filter);\r\n        } else if(props.tab === 'Completed') {\r\n            filter = filter.filter(task => task.completed);\r\n            setTask(filter);\r\n        } \r\n    }, [props.tab, props.task ]);\r\n\r\n    useEffect(() => {\r\n        const saveTask = localStorage.getItem(\"task\");\r\n        if(saveTask) {\r\n            getStoredTask(JSON.parse(saveTask));\r\n        }\r\n    }, [getStoredTask])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"task\", JSON.stringify(props.task));\r\n    })\r\n    \r\n    const completedStyle = { textDecoration: \"line-through\" };\r\n    \r\n    return (\r\n        task.map((list, index) => {\r\n            return <div className=\"TaskList\" key={index}>\r\n                <div>\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        id=\"task\"\r\n                        className=\"list-checkbox\"\r\n                        checked={list.completed}\r\n                        onChange={(e) => props.changed(e, list.id)}>\r\n                    </input>\r\n                    <label \r\n                        htmlFor=\"task\" \r\n                        className=\"label-checkbox\"\r\n                        style={list.completed ? completedStyle : null}>{list.task}\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    {props.tab === 'Completed' \r\n                        ? <span \r\n                            className=\"material-icons md-24 icon-delete\"\r\n                            onClick={props.deleted}>delete_outline\r\n                          </span> \r\n                        : null \r\n                    }\r\n                </div>\r\n            </div>\r\n        })\r\n    )\r\n}\r\n\r\nexport default TaskList;","import './DeleteButton.css';\r\n\r\nconst deletButton = (props) => {\r\n\r\n    return (\r\n        props.tab === 'Completed'\r\n            ? <div className=\"DeleteButton\">\r\n                <button className=\"btn-delete\" onClick={props.deleted}>\r\n                    <span className=\"material-icons md-16\">delete_outline</span>delete all\r\n                </button>\r\n            </div>\r\n            : null\r\n    )\r\n}\r\n\r\nexport default deletButton;","import React, { Component } from 'react';\n\nimport './App.css';\nimport Tabs from '../components/Tabs/Tabs';\nimport AddTask from '../components/AddTask/AddTask';\nimport TaskList from '../components/TaskList/TaskList';\nimport DeleteButton from '../components/DeleteButton/DeleteButton';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: '',\n      task: [],\n      uniqueID: 0,\n      activeTab: 'All'\n    }\n  }\n\n  componentDidMount = () => document.addEventListener(\"keydown\", this.handleAddTaskPress);\n\n  componentWillUnmount = () => document.addEventListener(\"keydown\", this.handleAddTaskPress);\n  \n  handleInputChange = (event) => this.setState({ input: event.target.value });\n\n  handleAddTaskPress = event => {\n    if(event.keyCode === 13) {\n      this.setState(prevState => ({ uniqueID: prevState.uniqueID + 1}));\n      if(this.state.input) {\n        this.setState(prevState => ({\n          task: [...prevState.task, { id: this.state.uniqueID, task: this.state.input, completed: false} ]\n        }))\n      }\n      this.setState({ input: ''})\n    }\n  }\n\n  handleAddTaskClick = () => {\n    this.setState(prevState => ({ uniqueID: prevState.uniqueID + 1}));\n\n    if(this.state.input) {\n      this.setState(prevState => ({\n          task: [...prevState.task, { id: this.state.uniqueID, task: this.state.input, completed: false} ]\n      }))\n    }\n    \n    this.setState({ input: ''})\n  }\n\n  getActiveTab = (tab) => this.setState({ activeTab: tab});\n\n  handleCheckedChange = (event, id) => {\n    let temp = [...this.state.task];\n\n    temp.forEach((data) => {\n      if(data.id === id) {\n        data.completed = event.target.checked;\n      }\n    })\n    \n    this.setState({ task: temp });\n  }\n\n  handleDeleteTaskClicked = (id) => {\n    let temp = [...this.state.task];\n    let index = 0;\n    temp.forEach((data, i) => {\n      if(data.id === id) {\n        index = i;\n      }\n    })\n    temp.splice(index, 1);\n    this.setState({ task: temp });\n  }\n\n  handleDeleteAllTask = () => {\n    let temp = [...this.state.task];\n\n    temp = temp.filter(task => !task.completed)\n\n    this.setState({ task: temp })\n  }\n\n  getLocalStoredTask = (data) => {\n    let length = data.length - 1;\n    this.setState({ \n      task: data,  \n      uniqueID: data.length ? data[length].id : 0\n    })\n  }\n\n  render() { \n    return (\n      <div className=\"App\">\n          <h1>#todo</h1>\n          <Tabs \n            active={this.getActiveTab}\n          />\n          <AddTask \n            input={this.handleInputChange}\n            clicked={this.handleAddTaskClick}\n            task={this.state.input}\n          />\n          <TaskList \n            task={this.state.task}\n            changed={this.handleCheckedChange}\n            deleted={this.handleDeleteTaskClicked}\n            tab={this.state.activeTab}\n            getStoredTask={this.getLocalStoredTask}\n          /> \n         <DeleteButton \n            deleted={this.handleDeleteAllTask}\n            tab={this.state.activeTab}\n        />            \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}