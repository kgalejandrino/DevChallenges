{"version":3,"sources":["hoc/Auxilliary/Auxilliary.js","components/Sidebar/ButtonStories/ButtonStories.js","components/Sidebar/Sidebar.js","components/Canvas/Buttons/Button/Button.js","components/Canvas/Buttons/Buttons.js","components/Canvas/Panel/Panel.js","components/Canvas/Canvas.js","hoc/Layout/Layout.js","container/App.js","reportWebVitals.js","index.js"],"names":["aux","props","children","list","id","type","text","ButtonStories","useState","stories","selected","setSelected","className","map","story","onClick","forEach","item","posClicked","typeClicked","style","color","lists","Sidebar","btnStates","setBtnStates","0","1","2","3","4","5","listIcon","setlistIcon","states","slideRight","menu","idx","i","prevState","Radium","offShadow","boxShadow","borderHoverColor","btnStyles","backgroundColor","textColor","displayIcon","position","btnIcon","isShadowed","shadowColor","hoverColor","border","displayButton","btnSize","disabled","isDisabled","buttons","show","panel","onChange","changeText","defaultValue","selectTextColor","selectBgColor","selectShadowColor","selectHoverColor","selectDisable","selectShadow","selectIcon","selectSize","Canvas","setDisabled","shadowed","setShadow","btnText","setBtnText","icon","setIcon","size","setSize","bgColor","setBgColor","tColor","setTextColor","sColor","setShadowColor","hColor","setHoverColor","e","target","value","Layout","handleBtnTypeClicked","setState","btnType","handleIconPosClicked","pos","iconPosition","handleMenuClicked","slideMenu","state","iconMenu","showButton","this","Component","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.7e110ba7.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;","import React, { useState }from 'react';\r\n\r\nimport './ButtonStories.css';\r\n\r\nconst list = [\r\n    { id: 1, type: 'default', text: 'Default Button' },\r\n    { id: 2, type: 'outline', text: 'Outline Button' },\r\n    { id: 3, type: 'text', text: 'Text Button'},\r\n    { id: 4, type: 'left-icon', text: 'Left Icon Button'},\r\n    { id: 5, type: 'right-icon', text: 'Right Icon Button'},\r\n    { id: 6, type: 'primary', text: 'Primary Button' },\r\n    { id: 7, type: 'secondary', text: 'Secondary Button'}, \r\n    { id: 8, type: 'danger', text: 'Danger Button' }\r\n];\r\n\r\nconst ButtonStories = (props) => {\r\n    const [stories, setStories] = useState(list);\r\n    const [selected, setSelected] = useState(1);\r\n\r\n    const showButton = (id) => {\r\n        setSelected(id);\r\n        const story = list.forEach(item => {\r\n            if(item.id === id) {\r\n                if(item.type === 'left-icon' || item.type === 'right-icon') {\r\n                    props.posClicked(item.type);\r\n                    props.typeClicked('icon-btn');\r\n                } else {\r\n                    props.posClicked('');\r\n                    props.typeClicked(item.type);\r\n                }\r\n            }\r\n        });\r\n        return story;\r\n    }\r\n\r\n\r\n    return (\r\n        <ul className=\"ButtonStories\">\r\n            {stories.map(story =>\r\n                <li \r\n                    id={selected === story.id ? 'highlighted' : null}\r\n                    key={story.id}\r\n                    onClick={() => showButton(story.id)}>\r\n                    <span \r\n                        className=\"material-icons md-18 add-icon\" \r\n                        style={{color: selected === story.id ? '#fff' : '#f7542e'}}>bookmark_border\r\n                    </span>\r\n                    {story.text}\r\n                </li>\r\n                \r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ButtonStories;","import React, { useState } from 'react';\r\n\r\nimport './Sidebar.css';\r\nimport Aux from '../../hoc/Auxilliary/Auxilliary';\r\nimport ButtonStories from './ButtonStories/ButtonStories';\r\n\r\nconst lists = ['Colors', 'Typography', 'Spaces', 'Buttons', 'Inputs', 'Grid'];\r\n\r\nconst Sidebar = (props) => {\r\n    let [btnStates, setBtnStates] = useState(false);\r\n    let [listIcon, setlistIcon] = useState({\r\n        0: 'add_box',\r\n        1: 'add_box',\r\n        2: 'add_box',\r\n        3: 'add_box',\r\n        4: 'add_box',\r\n        5: 'add_box',\r\n    });\r\n\r\n\r\n    /* Toggle button states lists */\r\n    const toggleListBtnStates = (i) => {\r\n        lists.forEach((list, idx) => {\r\n            if(idx === i && listIcon[i] === 'add_box') {\r\n                if(list === 'Buttons') {\r\n                    setBtnStates(!btnStates);\r\n                    props.typeClicked('default');\r\n                }\r\n\r\n                setlistIcon(prevState => ({\r\n                    ...prevState,\r\n                    [i]: 'remove'  \r\n                }));\r\n            } else if(idx === i && listIcon[i] === 'remove'){\r\n                if(list === 'Buttons') {\r\n                    setBtnStates(!btnStates);\r\n                    props.typeClicked('');\r\n                }\r\n                \r\n                setlistIcon(prevState => ({\r\n                    ...prevState,\r\n                    [i]: 'add_box'  \r\n                }));\r\n            }\r\n        })\r\n    }\r\n\r\n    const states = btnStates \r\n        ? <ButtonStories typeClicked={props.typeClicked} posClicked={props.posClicked}/> \r\n        : null;\r\n    \r\n    const slideRight = props.menu ? 'slide-right' : null;\r\n    return (\r\n        <div className=\"Sidebar\" id={slideRight}>\r\n            <div className=\"sidebar-title\">\r\n                <span className=\"dev\"><b>Dev</b></span>\r\n                <span className=\"challenges\"><b>challenges.io</b></span>\r\n            </div>\r\n            <nav>\r\n                <ul className=\"main-nav\">\r\n                    {lists.map((list, idx) => {\r\n                        return (\r\n                            <Aux key={idx}>\r\n                                <li>\r\n                                    <span \r\n                                        onClick={() => toggleListBtnStates(idx)}\r\n                                        className=\"material-icons md-18 add-icon\">\r\n                                        {listIcon[idx]}\r\n                                    </span>\r\n                                    {list} \r\n                                </li> \r\n                                {list === 'Buttons' ? states : null }\r\n                            </Aux>  \r\n                        )\r\n                    })}\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport Radium from 'radium';\r\n\r\nimport './Button.css';\r\nimport Aux from '../../../../hoc/Auxilliary/Auxilliary';\r\n\r\nconst button = (props) => {\r\n    let offShadow, boxShadow, borderHoverColor = null;\r\n    const btnStyles = {\r\n        backgroundColor: props.backgroundColor,\r\n        color: props.textColor,\r\n    };\r\n\r\n    const displayIcon = props.position ? <span className=\"material-icons md-24\" id={props.position}>{props.btnIcon}</span> : null;\r\n\r\n    if(props.isShadowed) { offShadow = { boxShadow: \"none\" } }\r\n\r\n    if(props.shadowColor) { boxShadow = { boxShadow: `0 0 4px ${props.shadowColor}`} }\r\n\r\n    if(props.hoverColor) { \r\n        borderHoverColor = {\r\n            ':hover': {\r\n                border: `4px solid ${props.hoverColor}`\r\n            } \r\n        }\r\n    }\r\n\r\n    const displayButton = \r\n        props.type \r\n            ? <button \r\n                style={{...offShadow, ...boxShadow, ...borderHoverColor, ...btnStyles}}\r\n                className={`btn ${props.type} ${props.btnSize}`} \r\n                id={props.type} \r\n                disabled={props.isDisabled}>\r\n                    {displayIcon}\r\n                    {props.text}\r\n            </button>\r\n            : null;\r\n\r\n\r\n    return <Aux>{displayButton}</Aux>\r\n}\r\n\r\nexport default Radium(button);","import React from 'react';\r\n\r\nimport './Buttons.css';\r\nimport Button from './Button/Button';\r\n\r\nconst buttons = (props) => {\r\n    return (\r\n        <div className=\"Buttons\">\r\n            <h2>Buttons</h2>\r\n            <Button \r\n                type={props.type}\r\n                position={props.position}\r\n                show={props.show}\r\n                isDisabled={props.isDisabled}\r\n                isShadowed={props.isShadowed}\r\n                btnIcon={props.btnIcon}\r\n                btnSize={props.btnSize}\r\n                backgroundColor={props.backgroundColor}\r\n                text={props.text}\r\n                textColor={props.textColor}\r\n                shadowColor={props.shadowColor}\r\n                hoverColor={props.hoverColor}>{props.text}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buttons;","import React from 'react';\r\n\r\nimport './Panel.css';\r\n\r\nconst panel = (props) => {\r\n    return (\r\n        <div className=\"Panel\">\r\n            <div className=\"tab\"><span>Controls</span></div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Control</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><b>Text</b></td>\r\n                        <td>\r\n                            <textarea onChange={props.changeText} defaultValue=\"Default\"></textarea>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><b>Color</b></td>\r\n                        <td>\r\n                            <div id=\"td-container\">\r\n                                <div className=\"td-boxes\">\r\n                                    <div className=\"box\">\r\n                                        <span>Text</span>\r\n                                        <input type=\"color\" defaultValue=\"#efefef\" onChange={props.selectTextColor}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"td-boxes\">\r\n                                    <div className=\"box\">\r\n                                        <span>Background</span>\r\n                                        <input type=\"color\" defaultValue=\"#efefef\" onChange={props.selectBgColor}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"td-boxes\">\r\n                                    <div className=\"box\">   \r\n                                        <span>Shadow</span>\r\n                                        <input type=\"color\" defaultValue=\"#efefef\" onChange={props.selectShadowColor}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"td-boxes\">\r\n                                    <div className=\"box\">\r\n                                        <span>Border Hover</span>\r\n                                        <input type=\"color\" defaultValue=\"#efefef\" onChange={props.selectHoverColor}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><b>Button</b></td>\r\n                        <td>\r\n                            <select onChange={props.selectDisable} className=\"disabled\">\r\n                                <option>Enabled</option>\r\n                                <option>Disabled</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><b>Box-shadow</b></td>\r\n                        <td>\r\n                            <select onChange={props.selectShadow}>\r\n                                    <option>Enabled</option>\r\n                                    <option>Disabled</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><b>Change Icon</b></td>\r\n                        <td>\r\n                            <select onChange={props.selectIcon}>\r\n                                    <option>face</option>\r\n                                    <option>heart</option>\r\n                                    <option>leaf</option>\r\n                                    <option>tool</option>\r\n                                    <option>star</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><b>Change Size</b></td>\r\n                        <td>\r\n                            <select onChange={props.selectSize}>\r\n                                    <option>small</option>\r\n                                    <option>medium</option>\r\n                                    <option>large</option>\r\n                            </select>\r\n                        </td>                        \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default panel;","import React, { useState } from 'react';\r\n\r\nimport './Canvas.css';\r\nimport Buttons from './Buttons/Buttons';\r\nimport Panel from './Panel/Panel';\r\n\r\n\r\nconst Canvas = (props) => {\r\n    let [disabled, setDisabled] = useState(false);\r\n    let [shadowed, setShadow] = useState(false);\r\n    let [btnText, setBtnText] = useState('Default');\r\n    let [icon, setIcon] = useState('face');\r\n    let [size, setSize] = useState('small');\r\n    let [bgColor, setBgColor] = useState('');\r\n    let [tColor, setTextColor] = useState('');\r\n    let [sColor, setShadowColor] = useState('');\r\n    let [hColor, setHoverColor] = useState('');\r\n\r\n    const handleDisableSelection = () => setDisabled(!disabled);\r\n\r\n    const handleBoxShadowSelection = () => setShadow(!shadowed);\r\n\r\n    const handleChangeText = (e) => setBtnText(e.target.value);\r\n\r\n    const handleSizeSelection = (e) => setSize(e.target.value);\r\n\r\n    const handleBackgroundColorSelection = (e) => setBgColor(e.target.value);\r\n\r\n    const handleTextColorSelection = (e) => setTextColor(e.target.value);\r\n\r\n    const handleShadowColorSelection = (e) => setShadowColor(e.target.value);\r\n\r\n    const handleHoverColorSelection = (e) => setHoverColor(e.target.value);\r\n\r\n    const handleIconSelection = (e) => {\r\n        switch(e.target.value) {\r\n            case 'face':\r\n                setIcon('face');\r\n                break;\r\n            case 'heart':\r\n                setIcon('favorite');\r\n                break;\r\n            case 'leaf':\r\n                setIcon('eco');\r\n                break;\r\n            case 'tool':\r\n                setIcon('build');\r\n                break;\r\n            case 'star':\r\n                setIcon('grade');\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Canvas\">\r\n            <Buttons \r\n                type={props.type}\r\n                position={props.position}\r\n                show={props.show}\r\n                isDisabled={disabled}\r\n                isShadowed={shadowed}\r\n                text={btnText}\r\n                btnIcon={icon}\r\n                btnSize={size}\r\n                backgroundColor={bgColor}\r\n                textColor={tColor}\r\n                shadowColor={sColor}\r\n                hoverColor={hColor}\r\n            />\r\n            <Panel \r\n                selectDisable={handleDisableSelection}\r\n                selectShadow={handleBoxShadowSelection}\r\n                changeText={handleChangeText}\r\n                selectIcon={handleIconSelection}\r\n                selectSize={handleSizeSelection}\r\n                selectBgColor={handleBackgroundColorSelection}\r\n                selectTextColor={handleTextColorSelection}\r\n                selectShadowColor={handleShadowColorSelection}\r\n                selectHoverColor={handleHoverColorSelection}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Canvas;","import React, { Component } from 'react';\r\n\r\nimport './Layout.css';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport Canvas from '../../components/Canvas/Canvas';\r\nimport Aux from '../Auxilliary/Auxilliary';\r\n\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          btnType: '',\r\n          iconPosition: '',\r\n          showButton: false,\r\n          slideMenu: false,\r\n          iconMenu: 'menu'\r\n        }\r\n      }\r\n    \r\n      /* Handle Button states: eg. default/ oultine/ text */\r\n      handleBtnTypeClicked = (type) => this.setState({ btnType: type });\r\n    \r\n      /* Handle Button states w/ icon: left/right icon */\r\n      handleIconPosClicked = (pos) => this.setState({ iconPosition: pos });\r\n    \r\n      /* Handle Slide Menu */\r\n      handleMenuClicked = () => {\r\n        this.setState(prevState => ({ \r\n          slideMenu: !prevState.slideMenu,\r\n        }));\r\n\r\n        if(this.state.iconMenu === 'menu') {\r\n          this.setState({ iconMenu: 'close'});\r\n        } else {\r\n          this.setState({ iconMenu: 'menu'});\r\n        }\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <Aux>\r\n            <span \r\n                className=\"material-icons md-36 icon-menu\" \r\n                id={this.state.iconMenu} \r\n                onClick={this.handleMenuClicked}>{this.state.iconMenu}\r\n            </span>\r\n            <div className=\"Layout\">       \r\n              <Sidebar\r\n                menu={this.state.slideMenu} \r\n                typeClicked={this.handleBtnTypeClicked}\r\n                posClicked={this.handleIconPosClicked}\r\n              />\r\n              <Canvas \r\n                type={this.state.btnType}\r\n                position={this.state.iconPosition}\r\n                show={this.state.showButton}\r\n              />\r\n          </div>\r\n          </Aux>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\n\nimport Aux from '../hoc/Auxilliary/Auxilliary';\nimport Layout from '../hoc/Layout/Layout';\n\nconst app = () => {\n    return (\n     <Aux>\n       <Layout />\n     </Aux>\n    );\n}\n\nexport default app;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './container/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}