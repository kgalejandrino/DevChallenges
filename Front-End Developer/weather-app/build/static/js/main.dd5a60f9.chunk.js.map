{"version":3,"sources":["Utils/Utils.js","components/SideBar/CurrentWeather/CurrentWeather.js","components/SideBar/SearchBar/FilterSearch/FilterSearch.js","components/SideBar/SearchBar/SearchBar.js","components/SideBar/Sidebar.js","components/Main/TempScale/TempScale.js","components/Main/WeeklyWeather/WeeklyWeather.js","components/Main/Highlights/Highlight/Highlight.js","components/Main/Highlights/Highlights.js","components/Main/Main.js","containers/Weather/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["getCurrentPosition","location","Promise","resolve","reject","navigator","geolocation","weatherState","dayArr","monthArr","formatDate","d","dt","Date","day","getUTCDay","date","getUTCDate","month","getUTCMonth","convertToFarenheight","temp","Math","floor","currentWeather","props","data","the_temp","toString","scale","tempScale","className","onClick","clicked","request","src","weather_state_abbr","alt","weather_state_name","applicable_date","FilterSearch","useState","hover","setHover","handleMouseOver","prevState","onMouseEnter","onMouseLeave","getWeather","id","searchBar","style","search","animation","closed","type","placeholder","onChange","changed","value","input","searched","error","filtered","map","loc","index","title","woeid","Radium","height","TempScale","celsius","setCelsius","getScale","weeklyWeather","max","min","state","highlight","margin","marginRight","unit","children","highlights","wind_speed","transform","wind_direction","wind_direction_compass","humidity","width","visibility","toFixed","replace","air_pressure","main","weekly","slice","max_temp","min_temp","href","Weather","fetchCoordinates","a","coords","latitude","longitude","fetchDataWithLongLat","alert","console","lat","long","axios","get","then","response","fetchDatawithWoeid","setState","consolidated_weather","catch","log","handleSearchOpenClicked","handleSearchClosedClicked","handleInputChange","event","target","handleSearchedClicked","length","filteredSearch","handleGetWeather","handleGetTempScale","activeScale","handleRequestCurLocation","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd5a60f9.chunk.js","sourcesContent":["/* Fetch users geolocation */\r\nexport function getCurrentPosition(location = {}) {\r\n    return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, location);\r\n    })\r\n}\r\n\r\n/* Weather state object set to the image's URL */\r\nexport const weatherState = {\r\n    \"sn\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Snow.png?raw=true\",\r\n    \"sl\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Sleet.png?raw=true\",\r\n    \"h\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Hail.png?raw=true\",\r\n    \"t\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Hail.png?raw=true\",\r\n    \"hr\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/HeavyRain.png?raw=true\",\r\n    \"lr\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/LightRain.png?raw=true\",\r\n    \"s\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Shower.png?raw=true\",\r\n    \"hc\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/HeavyCloud.png?raw=true\",\r\n    \"lc\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/LightCloud.png?raw=true\",\r\n    \"c\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Clear.png?raw=true\"\r\n}\r\n\r\n/* Functionality to get the Date - format (eg. Fri, 5 Jun) */\r\nconst dayArr = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'];\r\nconst monthArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n\r\nexport const formatDate = (d) => {\r\n    const dt = new Date(d);\r\n\r\n    const day = dt.getUTCDay();\r\n    const date = dt.getUTCDate();\r\n    const month = dt.getUTCMonth();\r\n\r\n    return `${dayArr[day]}, ${date} ${monthArr[month]}`\r\n}\r\n\r\n/* Functionality to get convert celcius to farenheight */\r\nexport const convertToFarenheight = (temp) => {\r\n    return Math.floor((temp * 1.8) + 32);\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './CurrentWeather.css';\r\nimport { weatherState, formatDate, convertToFarenheight } from '../../../Utils/Utils';\r\n\r\nconst currentWeather = (props) => {\r\n    let data = {}\r\n    if(props.data) { data = props.data }\r\n\r\n    let temp = Math.floor(data.the_temp).toString();\r\n    let scale = 'C';\r\n\r\n    if(props.tempScale === 'farenheight') {\r\n        temp = convertToFarenheight(Math.floor(data.the_temp).toString());\r\n        scale = 'F'\r\n    } \r\n\r\n    return (\r\n        <div className=\"CurrentWeather\">\r\n            <div className=\"cur_box1\">\r\n                <div className=\"box1--search\" onClick={props.clicked}>Search for places</div>\r\n                <div className=\"box1--icon\" onClick={props.request}>\r\n                    <span className=\"material-icons\">my_location</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"cur_box2\">\r\n                <div className=\"bground\"></div>\r\n                <div className=\"current_image\">\r\n                    <img src={weatherState[data.weather_state_abbr]} alt=\"Shower\"></img>\r\n                </div>\r\n                <div className=\"current_temp\">\r\n                    <span className=\"temp\">{temp}</span>\r\n                    <span className=\"material-icons cur-temp--icon\">radio_button_unchecked</span>\r\n                    <span className=\"cur-temp--type\">{scale}</span>\r\n                </div>\r\n                <div className=\"current_description\">{data.weather_state_name}</div>\r\n                <div className=\"current_date\">\r\n                    <span className=\"today\">Today</span>\r\n                    <span className=\"material-icons dot\">fiber_manual_record</span>\r\n                    <span className=\"date-today\">{formatDate(data.applicable_date)}</span>\r\n                </div>\r\n                <div className=\"current_location\">\r\n                    <span className=\"material-icons cur-loc--icon\">location_on</span>\r\n                    <span className=\"cur-loc--name\">{props.location}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default currentWeather;","import React, { useState } from 'react';\r\n\r\nimport './FilterSearch.css';\r\n\r\nconst FilterSearch = (props) => {\r\n    let [hover, setHover] = useState(false);\r\n\r\n    const handleMouseOver = () => {\r\n        setHover(prevState => !prevState);\r\n    }\r\n\r\n    return (\r\n        <div className=\"FilterSearch\" onMouseEnter={handleMouseOver} onMouseLeave={handleMouseOver} onClick={() => props.getWeather(props.id)}>\r\n                <span className=\"filter-location\">{props.location}</span>\r\n                {hover\r\n                    ? <span className=\"material-icons filter-icon\">navigate_next</span> \r\n                    : null\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterSearch;","import React from 'react';\r\n\r\nimport './SearchBar.css';\r\nimport FilterSearch from './FilterSearch/FilterSearch';\r\n\r\nconst searchBar = (props) => {\r\n    return (\r\n        <div className=\"SearchBar\" style={props.search ? { animation: \"slide .1s\"} : null}>\r\n            <div className=\"search_box\">\r\n                <span className=\"material-icons close-icon\" onClick={props.closed}>close</span>\r\n                <div className=\"search\">\r\n                    <span className=\"material-icons search-icon\">search</span>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"search-input\" \r\n                        placeholder=\"search location\"\r\n                        onChange={props.changed}\r\n                        value={props.input}>\r\n                    </input>\r\n                    <button className=\"btn-search\" onClick={props.searched}>Search</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"filter_box\">\r\n                { props.error\r\n                    ? <div className=\"error\">Search Not Found. Please Enter a valid city.</div>\r\n                    : props.filtered.map((loc, index) => {\r\n                        return <FilterSearch key={index} location={loc.title} id={loc.woeid}getWeather={props.getWeather}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default searchBar;","import React from 'react';\r\nimport Radium from 'radium';\r\n\r\nimport './Sidebar.css';\r\nimport CurrentWeather from './CurrentWeather/CurrentWeather';\r\nimport SearchBar from './SearchBar/SearchBar';\r\n\r\nconst sideBar = (props) => {\r\n    let height = {}\r\n    if(!props.search) {\r\n        height={\r\n            '@media (max-width: 750px)': {\r\n                height: \"auto\"\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Sidebar\" style={height}>\r\n                { props.search\r\n                    ? <SearchBar \r\n                        search={props.search}\r\n                        searched={props.searched}\r\n                        closed={props.closed} \r\n                        changed={props.changed}\r\n                        filtered={props.filtered}\r\n                        input={props.input}\r\n                        getWeather={props.getWeather}\r\n                        error={props.error}\r\n                      /> \r\n                    : <CurrentWeather \r\n                        clicked={props.clicked}\r\n                        data={props.data}\r\n                        location={props.location}\r\n                        tempScale={props.tempScale}\r\n                        request={props.request}\r\n                      />\r\n                }\r\n        </div>\r\n    )\r\n}    \r\nexport default Radium(sideBar);","import React, { useState } from 'react';\r\n\r\nimport './TempScale.css';\r\n\r\nconst TempScale = (props) => {\r\n    let [celsius, setCelsius] = useState(true);\r\n\r\n    const activeCelsiusScale = () => {\r\n        setCelsius(true);\r\n        props.getScale(true)\r\n    }\r\n    const activeFarenheightScale = () => {\r\n        setCelsius(false);\r\n        props.getScale(false);\r\n    }    \r\n    \r\n    return (\r\n        <div className=\"TempScale\">\r\n            <div className={celsius ? 'scale_box active' : 'scale_box'} onClick={activeCelsiusScale}>\r\n                <span className=\"material-icons icon-scale\">radio_button_unchecked</span>\r\n                <span className=\"temp-scale\">C</span>\r\n            </div>\r\n            <div className={celsius ? 'scale_box' : 'scale_box active'} onClick={activeFarenheightScale}>\r\n                <span className=\"material-icons icon-scale\">radio_button_unchecked</span>\r\n                <span className=\"temp-scale\">F</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TempScale;","import React from 'react';\r\n\r\nimport './WeeklyWeather.css';\r\nimport { weatherState, convertToFarenheight } from '../../../Utils/Utils';\r\n\r\nconst weeklyWeather = props => {\r\n    let max = Math.floor(props.max).toString();\r\n    let min = Math.floor(props.min).toString();\r\n    let scale = 'C';\r\n\r\n    if(props.tempScale === 'farenheight') {\r\n        max = convertToFarenheight(Math.floor(props.max).toString());\r\n        min = convertToFarenheight(Math.floor(props.min).toString());\r\n        scale = 'F';\r\n    }\r\n\r\n    return (\r\n        <div className=\"WeeklyWeather\">\r\n            <p>{props.date}</p>\r\n            <img src={weatherState[props.state]} alt=\"Weather State\" className=\"weekly-state-img\"></img>\r\n            <div className=\"min-max_box\">\r\n                <div className=\"max-temp\">\r\n                    <span>{max}</span>\r\n                    <span className=\"material-icons icon-scale\">radio_button_unchecked</span>\r\n                    <span>{scale}</span>\r\n                </div>\r\n                <div className=\"min-temp\">\r\n                    <span>{min}</span>\r\n                    <span className=\"material-icons icon-scale\">radio_button_unchecked</span>\r\n                    <span>{scale}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default weeklyWeather;","import React from 'react';\r\n\r\nimport './Highlight.css';\r\n\r\nconst highlight = (props) => {\r\n    let margin = {};\r\n    if(props.title === 'Visibility' || props.title === 'Air Pressure') {\r\n        margin = { marginRight: \"8px\" };\r\n    }\r\n\r\n    return (\r\n        <div className=\"highlight\">\r\n            <p>{props.title}</p>\r\n            <div>\r\n                <span className=\"value\" style={margin}>{props.value}</span>\r\n                <span className=\"unit\">{props.unit}</span>\r\n            </div>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default highlight;","import React from 'react';\r\n\r\nimport './Highlights.css';\r\nimport Highlight from './Highlight/Highlight';\r\n\r\nconst highlights = (props) => {\r\n    let data = {};\r\n    if(props.highlights) { data = props.highlights }\r\n\r\n    return (\r\n        <div className=\"Highlights\">\r\n            <h2>Today's Highlights</h2>\r\n            <div className=\"highlight_cards\">\r\n                <Highlight \r\n                    title={'Wind Status'} \r\n                    unit={'mph'}\r\n                    value={Math.floor(data.wind_speed).toString()}>\r\n                <div className=\"card-direction\">\r\n                    <span \r\n                        className=\"material-icons icon-wind\"\r\n                        style={{ transform: `rotate(${Math.floor(data.wind_direction).toString()}deg)`}}>navigation\r\n                    </span>\r\n                    <span className=\"direction\">{data.wind_direction_compass}</span>\r\n                </div>\r\n                </Highlight>\r\n                <Highlight\r\n                    title={'Humidity'}\r\n                    unit={'%'}\r\n                    value={data.humidity}>\r\n                    <div className=\"card-humidity\">\r\n                        <div className=\"humidity-percentage\">\r\n                            <span>0</span>\r\n                            <span>50</span>\r\n                            <span>100</span>\r\n                        </div>\r\n                        <div className=\"humidity-bar bar\">\r\n                            <div className=\"bar-percentage bar\" style={{ width: `${data.humidity}px`}}></div>\r\n                        </div>\r\n                        <div className=\"percentage-sign\">%</div>\r\n                    </div>\r\n                </Highlight>\r\n                <Highlight \r\n                    title={'Visibility'}\r\n                    unit={'miles'}\r\n                    value={data.visibility ? data.visibility.toFixed(1).toString().replace('.', ',') : ''}\r\n                />\r\n                <Highlight \r\n                    title={'Air Pressure'}\r\n                    unit={'mb'}\r\n                    value={Math.floor(data.air_pressure).toString()}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default highlights;","import React from 'react';\r\n\r\nimport './Main.css';\r\nimport TempScale from './TempScale/TempScale';\r\nimport WeeklyWeather from './WeeklyWeather/WeeklyWeather';\r\nimport Highlights from './Highlights/Highlights';\r\nimport { formatDate } from '../../Utils/Utils';\r\n\r\nconst main = (props) => {\r\n    let weekly = [];\r\n    if(props.data) {\r\n        weekly = props.data.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Main\">\r\n            <div className=\"main-wrapper\">\r\n                <TempScale \r\n                    getScale={props.getScale}\r\n                />\r\n                <div className=\"weekly\">\r\n                    {weekly.map((data, index) => {\r\n                        return <WeeklyWeather \r\n                                    key={index}\r\n                                    date={index === 0 ? 'Tomorrow' : formatDate(data.applicable_date) }\r\n                                    state={data.weather_state_abbr}\r\n                                    max={data.max_temp} \r\n                                    min={data.min_temp}\r\n                                    tempScale={props.tempScale}\r\n                               /> \r\n                    })}\r\n                </div>\r\n                <Highlights highlights={props.highlights}/>\r\n            </div>\r\n            <footer>\r\n                <span>created by</span>\r\n                <a href=\"https://github.com/kgalejandrino\">Kevin Alejandrino</a>\r\n                <span>- devChallenges.io</span>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default main;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './Weather.css';\r\nimport Sidebar from '../../components/SideBar/Sidebar';\r\nimport Main from '../../components/Main/Main';\r\nimport { getCurrentPosition } from '../../Utils/Utils';\r\n\r\nclass Weather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            search: false,\r\n            data: [],\r\n            location: 'Helsinki',\r\n            input: '',\r\n            woeid: 565346,\r\n            activeScale: 'celsius',\r\n            filteredSearch: [],\r\n            error: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        /* Init data to render if user does not allow to know its location*/\r\n        axios.get(`https://api.allorigins.win/raw?url=https://www.metaweather.com/api/location/${this.state.woeid}/`)\r\n        .then(response => {\r\n            this.setState({ \r\n                data: response.data.consolidated_weather,\r\n                location: response.data.title\r\n            })\r\n        })\r\n        .catch(error => {\r\n            alert(error);\r\n            console.log(error)\r\n        })\r\n\r\n        this.fetchCoordinates();\r\n    }\r\n\r\n    fetchCoordinates = async () => {\r\n        try {\r\n            const { coords } = await getCurrentPosition();\r\n            const { latitude, longitude } = coords;\r\n            this.fetchDataWithLongLat(latitude.toFixed(2), longitude.toFixed(2));\r\n        } catch (error) {\r\n            alert(error);\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    fetchDataWithLongLat = (lat, long) => {\r\n        axios.get(`https://api.allorigins.win/raw?url=https://www.metaweather.com/api/location/search/?lattlong=${lat},${long}`)\r\n        .then(response => {\r\n            const data = response.data[0];\r\n            return this.fetchDatawithWoeid(data.woeid);\r\n        })\r\n    }\r\n\r\n    fetchDatawithWoeid = (id) => {\r\n        axios.get(`https://api.allorigins.win/raw?url=https://www.metaweather.com/api/location/${id}/`)\r\n        .then(response => {\r\n            this.setState({ \r\n                data: response.data.consolidated_weather,\r\n                location: response.data.title\r\n            })\r\n        })\r\n        .catch(error => {\r\n            alert(error);\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleSearchOpenClicked = () => this.setState({ search: true })\r\n\r\n    handleSearchClosedClicked = () => this.setState({ search: false })\r\n\r\n    handleInputChange = (event) => this.setState({ input: event.target.value }) \r\n\r\n    handleSearchedClicked = () => {\r\n        axios.get(`https://api.allorigins.win/raw?url=https://www.metaweather.com/api/location/search/?query=${this.state.input}`)\r\n        .then(response => {\r\n            if(response.data.length) {\r\n                this.setState({ \r\n                    filteredSearch: [...response.data],\r\n                    error: false\r\n                });\r\n            } else {\r\n                this.setState({ error: true });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            alert(error);\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleGetWeather = (id) => {\r\n        this.setState({ search: false })\r\n        this.fetchDatawithWoeid(id);\r\n    }\r\n\r\n    handleGetTempScale = (scale) => {\r\n        if(scale) {\r\n            this.setState({ activeScale: 'celsius' })\r\n        } else {\r\n            this.setState({ activeScale: 'farenheight' })\r\n        }\r\n    }\r\n\r\n    handleRequestCurLocation = () => { this.fetchCoordinates() }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Weather\">\r\n                <Sidebar \r\n                    clicked={this.handleSearchOpenClicked}\r\n                    closed={this.handleSearchClosedClicked}\r\n                    searched={this.handleSearchedClicked}\r\n                    input={this.state.input}\r\n                    data={this.state.data[0]}\r\n                    location={this.state.location}\r\n                    search={this.state.search}\r\n                    changed={this.handleInputChange}\r\n                    filtered={this.state.filteredSearch}\r\n                    error={this.state.error}\r\n                    getWeather={this.handleGetWeather}\r\n                    tempScale={this.state.activeScale}\r\n                    request={this.handleRequestCurLocation}\r\n                />\r\n                <Main \r\n                    data={this.state.data}\r\n                    highlights={this.state.data[0]}\r\n                    getScale={this.handleGetTempScale}\r\n                    tempScale={this.state.activeScale}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Weather;","import './App.css';\nimport Weather from './containers/Weather/Weather';\nimport Radium, { StyleRoot } from 'radium'\n\nfunction App() {\n  return (\n    <StyleRoot>\n      <div className=\"App\">\n        <Weather />\n      </div>\n    </StyleRoot>\n  );\n}\n\nexport default Radium(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}