{"version":3,"sources":["Utils/Utils.js","components/SideBar/CurrentWeather/CurrentWeather.js","components/SideBar/SearchBar/FilterSearch/FilterSearch.js","components/SideBar/SearchBar/SearchBar.js","components/SideBar/Sidebar.js","components/Main/TempScale/TempScale.js","components/Main/WeeklyWeather/WeeklyWeather.js","components/Main/Highlights/Highlight/Highlight.js","components/Main/Highlights/Highlights.js","components/Main/Main.js","containers/Weather/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["getCurrentPosition","location","Promise","resolve","reject","navigator","geolocation","weatherState","dayArr","monthArr","formatDate","d","dt","Date","day","getUTCDay","date","getUTCDate","month","getUTCMonth","convertToFarenheight","temp","Math","floor","currentWeather","props","data","the_temp","toString","scale","tempScale","className","onClick","clicked","request","src","weather_state_abbr","alt","weather_state_name","applicable_date","FilterSearch","useState","hover","setHover","handleMouseOver","prevState","input","onMouseEnter","onMouseLeave","getWeather","id","searchBar","style","search","transform","closed","type","placeholder","onChange","changed","value","searched","error","filtered","map","loc","index","title","woeid","Radium","height","TempScale","celsius","setCelsius","getScale","weeklyWeather","max","min","state","highlight","margin","marginRight","unit","children","highlights","wind_speed","wind_direction","wind_direction_compass","humidity","width","visibility","toFixed","replace","air_pressure","main","weekly","slice","max_temp","min_temp","href","target","rel","Weather","enterSearchFunction","event","keyCode","handleSearchedClicked","fetchCoordinates","a","coords","latitude","longitude","fetchDataWithLongLat","alert","console","lat","long","axios","get","then","response","fetchDatawithWoeid","setState","consolidated_weather","catch","log","handleSearchOpenClicked","handleSearchClosedClicked","handleInputChange","length","filteredSearch","handleGetWeather","handleGetTempScale","activeScale","handleRequestCurLocation","this","document","addEventListener","removeEventListener","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa120dff.chunk.js","sourcesContent":["/* Fetch users geolocation */\r\nexport function getCurrentPosition(location = {}) {\r\n    return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, location);\r\n    })\r\n}\r\n\r\n/* Weather state object set to the image's URL */\r\nexport const weatherState = {\r\n    \"sn\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Snow.png?raw=true\",\r\n    \"sl\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Sleet.png?raw=true\",\r\n    \"h\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Hail.png?raw=true\",\r\n    \"t\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Hail.png?raw=true\",\r\n    \"hr\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/HeavyRain.png?raw=true\",\r\n    \"lr\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/LightRain.png?raw=true\",\r\n    \"s\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Shower.png?raw=true\",\r\n    \"hc\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/HeavyCloud.png?raw=true\",\r\n    \"lc\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/LightCloud.png?raw=true\",\r\n    \"c\": \"https://github.com/kgalejandrino/DevChallenges/blob/main/Front-End%20Developer/weather-app/src/assets/Clear.png?raw=true\"\r\n}\r\n\r\n/* Functionality to get the Date - format (eg. Fri, 5 Jun) */\r\nconst dayArr = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'];\r\nconst monthArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n\r\nexport const formatDate = (d) => {\r\n    const dt = new Date(d);\r\n\r\n    const day = dt.getUTCDay();\r\n    const date = dt.getUTCDate();\r\n    const month = dt.getUTCMonth();\r\n\r\n    return `${dayArr[day]}, ${date} ${monthArr[month]}`\r\n}\r\n\r\n/* Functionality to get convert celcius to farenheight */\r\nexport const convertToFarenheight = (temp) => {\r\n    return Math.floor((temp * 1.8) + 32);\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './CurrentWeather.css';\r\nimport { weatherState, formatDate, convertToFarenheight } from '../../../Utils/Utils';\r\n\r\nconst currentWeather = (props) => {\r\n    let data = {}\r\n    if(props.data) { data = props.data }\r\n\r\n    let temp = Math.floor(data.the_temp).toString();\r\n    let scale = 'C';\r\n\r\n    if(props.tempScale === 'farenheight') {\r\n        temp = convertToFarenheight(Math.floor(data.the_temp).toString());\r\n        scale = 'F'\r\n    } \r\n\r\n    return (\r\n        <div className=\"CurrentWeather\">\r\n            <div className=\"cur_box1\">\r\n                <div className=\"box1--search\" onClick={props.clicked}>Search for places</div>\r\n                <div className=\"box1--icon\" onClick={props.request}>\r\n                    <span className=\"material-icons\">my_location</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"cur_box2\">\r\n                <div className=\"bground\"></div>\r\n                <div className=\"current_image\">\r\n                    <img src={weatherState[data.weather_state_abbr]} alt=\"Shower\"></img>\r\n                </div>\r\n                <div className=\"current_temp\">\r\n                    <span className=\"temp\">{temp}</span>\r\n                    <span className=\"material-icons cur-temp--icon\">radio_button_unchecked</span>\r\n                    <span className=\"cur-temp--type\">{scale}</span>\r\n                </div>\r\n                <div className=\"current_description\">{data.weather_state_name}</div>\r\n                <div className=\"current_date\">\r\n                    <span className=\"today\">Today</span>\r\n                    <span className=\"material-icons dot\">fiber_manual_record</span>\r\n                    <span className=\"date-today\">{formatDate(data.applicable_date)}</span>\r\n                </div>\r\n                <div className=\"current_location\">\r\n                    <span className=\"material-icons cur-loc--icon\">location_on</span>\r\n                    <span className=\"cur-loc--name\">{props.location}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default currentWeather;","import React, { useState } from 'react';\r\n\r\nimport './FilterSearch.css';\r\n\r\nconst FilterSearch = (props) => {\r\n    let [hover, setHover] = useState(false);\r\n\r\n    const handleMouseOver = () => {\r\n        setHover(prevState => !prevState);\r\n    }\r\n\r\n    return (\r\n        props.input\r\n        ? <div \r\n            className=\"FilterSearch\" \r\n            onMouseEnter={handleMouseOver} \r\n            onMouseLeave={handleMouseOver} \r\n            onClick={() => props.getWeather(props.id)}\r\n            >\r\n            <span className=\"filter-location\">{props.location}</span>\r\n            {hover\r\n            ? <span className=\"material-icons filter-icon\">navigate_next</span> \r\n            : null\r\n            }\r\n        </div>\r\n        : null\r\n    )\r\n}\r\n\r\nexport default FilterSearch;","import React from 'react';\r\n\r\nimport './SearchBar.css';\r\nimport FilterSearch from './FilterSearch/FilterSearch';\r\n\r\nconst searchBar = (props) => {\r\n    return (\r\n        <div className=\"SearchBar\" style={props.search ? { transform: \"translateX(0)\" } : { transform: \"translateX(-100%)\" }} >\r\n            <div className=\"search_box\">\r\n                <span className=\"material-icons close-icon\" onClick={props.closed}>close</span>\r\n                <div className=\"search\">\r\n                    <span className=\"material-icons search-icon\">search</span>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"search-input\" \r\n                        placeholder=\"search location\"\r\n                        onChange={props.changed}\r\n                        value={props.input}>\r\n                    </input>\r\n                    <button className=\"btn-search\" onClick={props.searched}>Search</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"filter_box\">\r\n                { props.error\r\n                    ? <div className=\"error\">Search Not Found. Please Enter a valid city.</div>\r\n                    : props.filtered.map((loc, index) => {\r\n                        return <FilterSearch key={index} location={loc.title} id={loc.woeid}getWeather={props.getWeather} input={props.input}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default searchBar;","import React from 'react';\r\nimport Radium from 'radium';\r\n\r\nimport './Sidebar.css';\r\nimport CurrentWeather from './CurrentWeather/CurrentWeather';\r\nimport SearchBar from './SearchBar/SearchBar';\r\n\r\nconst sideBar = (props) => {\r\n    let height = {}\r\n    if(!props.search) {\r\n        height={\r\n            '@media (max-width: 750px)': {\r\n                height: \"auto\"\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Sidebar\" style={height}>\r\n            <SearchBar \r\n                search={props.search}\r\n                searched={props.searched}\r\n                closed={props.closed} \r\n                changed={props.changed}\r\n                filtered={props.filtered}\r\n                input={props.input}\r\n                getWeather={props.getWeather}\r\n                error={props.error}\r\n            /> \r\n            <CurrentWeather \r\n            clicked={props.clicked}\r\n            data={props.data}\r\n            location={props.location}\r\n            tempScale={props.tempScale}\r\n            request={props.request}\r\n            />\r\n        </div>\r\n    )\r\n}    \r\nexport default Radium(sideBar);","import React, { useState } from 'react';\r\n\r\nimport './TempScale.css';\r\n\r\nconst TempScale = (props) => {\r\n    let [celsius, setCelsius] = useState(true);\r\n\r\n    const activeCelsiusScale = () => {\r\n        setCelsius(true);\r\n        props.getScale(true)\r\n    }\r\n    const activeFarenheightScale = () => {\r\n        setCelsius(false);\r\n        props.getScale(false);\r\n    }    \r\n    \r\n    return (\r\n        <div className=\"TempScale\">\r\n            <div className={celsius ? 'scale_box active' : 'scale_box'} onClick={activeCelsiusScale}>\r\n                <span className=\"material-icons icon-scale\">radio_button_unchecked</span>\r\n                <span className=\"temp-scale\">C</span>\r\n            </div>\r\n            <div className={celsius ? 'scale_box' : 'scale_box active'} onClick={activeFarenheightScale}>\r\n                <span className=\"material-icons icon-scale\">radio_button_unchecked</span>\r\n                <span className=\"temp-scale\">F</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TempScale;","import React from 'react';\r\n\r\nimport './WeeklyWeather.css';\r\nimport { weatherState, convertToFarenheight } from '../../../Utils/Utils';\r\n\r\nconst weeklyWeather = props => {\r\n    let max = Math.floor(props.max).toString();\r\n    let min = Math.floor(props.min).toString();\r\n    let scale = 'C';\r\n\r\n    if(props.tempScale === 'farenheight') {\r\n        max = convertToFarenheight(Math.floor(props.max).toString());\r\n        min = convertToFarenheight(Math.floor(props.min).toString());\r\n        scale = 'F';\r\n    }\r\n\r\n    return (\r\n        <div className=\"WeeklyWeather\">\r\n            <p>{props.date}</p>\r\n            <img src={weatherState[props.state]} alt=\"Weather State\" className=\"weekly-state-img\"></img>\r\n            <div className=\"min-max_box\">\r\n                <div className=\"max-temp\">\r\n                    <span>{max}</span>\r\n                    <span className=\"material-icons icon-scale\">radio_button_unchecked</span>\r\n                    <span>{scale}</span>\r\n                </div>\r\n                <div className=\"min-temp\">\r\n                    <span>{min}</span>\r\n                    <span className=\"material-icons icon-scale\">radio_button_unchecked</span>\r\n                    <span>{scale}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default weeklyWeather;","import React from 'react';\r\n\r\nimport './Highlight.css';\r\n\r\nconst highlight = (props) => {\r\n    let margin = {};\r\n    if(props.title === 'Visibility' || props.title === 'Air Pressure') {\r\n        margin = { marginRight: \"8px\" };\r\n    }\r\n\r\n    return (\r\n        <div className=\"highlight\">\r\n            <p>{props.title}</p>\r\n            <div>\r\n                <span className=\"value\" style={margin}>{props.value}</span>\r\n                <span className=\"unit\">{props.unit}</span>\r\n            </div>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default highlight;","import React from 'react';\r\n\r\nimport './Highlights.css';\r\nimport Highlight from './Highlight/Highlight';\r\n\r\nconst highlights = (props) => {\r\n    let data = {};\r\n    if(props.highlights) { data = props.highlights }\r\n\r\n    return (\r\n        <div className=\"Highlights\">\r\n            <h2>Today's Highlights</h2>\r\n            <div className=\"highlight_cards\">\r\n                <Highlight \r\n                    title={'Wind Status'} \r\n                    unit={'mph'}\r\n                    value={Math.floor(data.wind_speed).toString()}>\r\n                <div className=\"card-direction\">\r\n                    <span \r\n                        className=\"material-icons icon-wind\"\r\n                        style={{ transform: `rotate(${Math.floor(data.wind_direction).toString()}deg)`}}>navigation\r\n                    </span>\r\n                    <span className=\"direction\">{data.wind_direction_compass}</span>\r\n                </div>\r\n                </Highlight>\r\n                <Highlight\r\n                    title={'Humidity'}\r\n                    unit={'%'}\r\n                    value={data.humidity}>\r\n                    <div className=\"card-humidity\">\r\n                        <div className=\"humidity-percentage\">\r\n                            <span>0</span>\r\n                            <span>50</span>\r\n                            <span>100</span>\r\n                        </div>\r\n                        <div className=\"humidity-bar bar\">\r\n                            <div className=\"bar-percentage bar\" style={{ width: `${data.humidity}px`}}></div>\r\n                        </div>\r\n                        <div className=\"percentage-sign\">%</div>\r\n                    </div>\r\n                </Highlight>\r\n                <Highlight \r\n                    title={'Visibility'}\r\n                    unit={'miles'}\r\n                    value={data.visibility ? data.visibility.toFixed(1).toString().replace('.', ',') : ''}\r\n                />\r\n                <Highlight \r\n                    title={'Air Pressure'}\r\n                    unit={'mb'}\r\n                    value={Math.floor(data.air_pressure).toString()}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default highlights;","import React from 'react';\r\n\r\nimport './Main.css';\r\nimport TempScale from './TempScale/TempScale';\r\nimport WeeklyWeather from './WeeklyWeather/WeeklyWeather';\r\nimport Highlights from './Highlights/Highlights';\r\nimport { formatDate } from '../../Utils/Utils';\r\n\r\nconst main = (props) => {\r\n    let weekly = [];\r\n    if(props.data) {\r\n        weekly = props.data.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Main\">\r\n            <div className=\"main-wrapper\">\r\n                <TempScale \r\n                    getScale={props.getScale}\r\n                />\r\n                <div className=\"weekly\">\r\n                    {weekly.map((data, index) => {\r\n                        return <WeeklyWeather \r\n                                    key={index}\r\n                                    date={index === 0 ? 'Tomorrow' : formatDate(data.applicable_date) }\r\n                                    state={data.weather_state_abbr}\r\n                                    max={data.max_temp} \r\n                                    min={data.min_temp}\r\n                                    tempScale={props.tempScale}\r\n                               /> \r\n                    })}\r\n                </div>\r\n                <Highlights highlights={props.highlights}/>\r\n            </div>\r\n            <footer>\r\n                <span>created by</span>\r\n                <a href=\"https://github.com/kgalejandrino\">Kevin Alejandrino</a>\r\n                <span>- <a href=\"https://devchallenges.io/\" target=\"_blank\" rel=\"noreferrer\">devChallenges.io</a></span>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default main;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './Weather.css';\r\nimport Sidebar from '../../components/SideBar/Sidebar';\r\nimport Main from '../../components/Main/Main';\r\nimport { getCurrentPosition } from '../../Utils/Utils';\r\n\r\nclass Weather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            search: false,\r\n            data: [],\r\n            location: 'Helsinki',\r\n            input: '',\r\n            woeid: 565346,\r\n            activeScale: 'celsius',\r\n            filteredSearch: [],\r\n            error: false,\r\n        }\r\n    }\r\n\r\n    enterSearchFunction = (event) => {\r\n        if(this.state.search && event.keyCode === 13) {\r\n            this.handleSearchedClicked();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        /* Init data to render if user does not allow to know its location*/\r\n        axios.get(`https://api.allorigins.win/raw?url=https://www.metaweather.com/api/location/${this.state.woeid}/`)\r\n        .then(response => {\r\n            this.setState({ \r\n                data: response.data.consolidated_weather,\r\n                location: response.data.title\r\n            })\r\n        })\r\n        .catch(error => {\r\n            alert(error);\r\n            console.log(error)\r\n        })\r\n\r\n        this.fetchCoordinates();\r\n        document.addEventListener(\"keydown\", this.enterSearchFunction, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.enterSearchFunction, false);\r\n    }\r\n\r\n    fetchCoordinates = async () => {\r\n        try {\r\n            const { coords } = await getCurrentPosition();\r\n            const { latitude, longitude } = coords;\r\n            this.fetchDataWithLongLat(latitude.toFixed(2), longitude.toFixed(2));\r\n        } catch (error) {\r\n            alert(error);\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    fetchDataWithLongLat = (lat, long) => {\r\n        axios.get(`https://api.allorigins.win/raw?url=https://www.metaweather.com/api/location/search/?lattlong=${lat},${long}`)\r\n        .then(response => {\r\n            const data = response.data[0];\r\n            return this.fetchDatawithWoeid(data.woeid);\r\n        })\r\n    }\r\n\r\n    fetchDatawithWoeid = (id) => {\r\n        axios.get(`https://api.allorigins.win/raw?url=https://www.metaweather.com/api/location/${id}/`)\r\n        .then(response => {\r\n            this.setState({ \r\n                data: response.data.consolidated_weather,\r\n                location: response.data.title\r\n            })\r\n        })\r\n        .catch(error => {\r\n            alert(error);\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleSearchOpenClicked = () => this.setState({ search: true })\r\n\r\n    handleSearchClosedClicked = () => this.setState({  search: false })\r\n\r\n    handleInputChange = (event) => this.setState({ input: event.target.value }) \r\n\r\n    handleSearchedClicked = () => {\r\n        axios.get(`https://api.allorigins.win/raw?url=https://www.metaweather.com/api/location/search/?query=${this.state.input}`)\r\n        .then(response => {\r\n            if(response.data.length) {\r\n                this.setState({ \r\n                    filteredSearch: [...response.data],\r\n                    error: false\r\n                });\r\n            } else {\r\n                this.setState({ error: true });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            alert(error);\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleGetWeather = (id) => {\r\n        this.setState({ \r\n            search: false, \r\n            input: ''\r\n        })\r\n        this.fetchDatawithWoeid(id);\r\n    }\r\n\r\n    handleGetTempScale = (scale) => {\r\n        if(scale) {\r\n            this.setState({ activeScale: 'celsius' })\r\n        } else {\r\n            this.setState({ activeScale: 'farenheight' })\r\n        }\r\n    }\r\n\r\n    handleRequestCurLocation = () => { this.fetchCoordinates() }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Weather\">\r\n                <Sidebar \r\n                    clicked={this.handleSearchOpenClicked}\r\n                    closed={this.handleSearchClosedClicked}\r\n                    searched={this.handleSearchedClicked}\r\n                    input={this.state.input}\r\n                    data={this.state.data[0]}\r\n                    location={this.state.location}\r\n                    search={this.state.search}\r\n                    changed={this.handleInputChange}\r\n                    filtered={this.state.filteredSearch}\r\n                    error={this.state.error}\r\n                    getWeather={this.handleGetWeather}\r\n                    tempScale={this.state.activeScale}\r\n                    request={this.handleRequestCurLocation}\r\n                />\r\n                <Main \r\n                    data={this.state.data}\r\n                    highlights={this.state.data[0]}\r\n                    getScale={this.handleGetTempScale}\r\n                    tempScale={this.state.activeScale}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Weather;","import './App.css';\r\nimport Weather from './containers/Weather/Weather';\r\nimport Radium, { StyleRoot } from 'radium'\r\n\r\nfunction App() {\r\n  return (\r\n    <StyleRoot>\r\n      <div className=\"App\">\r\n        <Weather />\r\n      </div>\r\n    </StyleRoot>\r\n  );\r\n}\r\n\r\nexport default Radium(App);\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}